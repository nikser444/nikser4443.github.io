// frontend/src/store/StoreProvider.tsx
import React, { ReactNode } from 'react';
import { Provider } from 'react-redux';
import { PersistGate } from 'redux-persist/integration/react';
import { store, persistor } from './index';

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è PersistGate
const LoadingComponent: React.FC = () => (
  <div className="flex items-center justify-center min-h-screen bg-gray-100 dark:bg-gray-900">
    <div className="flex flex-col items-center space-y-4">
      <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600"></div>
      <p className="text-gray-600 dark:text-gray-400">–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...</p>
    </div>
  </div>
);

// –ü—Ä–æ–ø—Å—ã –¥–ª—è StoreProvider
interface StoreProviderProps {
  children: ReactNode;
  loading?: ReactNode;
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ Redux Store
export const StoreProvider: React.FC<StoreProviderProps> = ({ 
  children, 
  loading = <LoadingComponent />
}) => {
  return (
    <Provider store={store}>
      <PersistGate 
        loading={loading} 
        persistor={persistor}
        onBeforeLift={() => {
          // –õ–æ–≥–∏–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–µ—Ä–µ–¥ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è
          console.log('üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞...');
        }}
      >
        {children}
      </PersistGate>
    </Provider>
  );
};

// HOC –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –∫ Redux
export const withStore = <P extends object>(
  Component: React.ComponentType<P>
): React.FC<P> => {
  return (props: P) => (
    <StoreProvider>
      <Component {...props} />
    </StoreProvider>
  );
};

export default StoreProvider;