// backend/src/services/EmailService.ts
import nodemailer from 'nodemailer';

export interface EmailConfig {
  host: string;
  port: number;
  secure: boolean;
  auth: {
    user: string;
    pass: string;
  };
}

export interface EmailOptions {
  to: string;
  subject: string;
  html: string;
  text?: string;
}

export class EmailService {
  private static transporter: nodemailer.Transporter | null = null;

  static async init(): Promise<void> {
    if (this.transporter) return;

    const config: EmailConfig = {
      host: process.env.SMTP_HOST || 'smtp.gmail.com',
      port: parseInt(process.env.SMTP_PORT || '587'),
      secure: process.env.SMTP_SECURE === 'true',
      auth: {
        user: process.env.SMTP_USER || '',
        pass: process.env.SMTP_PASS || '',
      },
    };

    this.transporter = nodemailer.createTransporter(config);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    try {
      await this.transporter.verify();
      console.log('‚úÖ Email service –ø–æ–¥–∫–ª—é—á–µ–Ω —É—Å–ø–µ—à–Ω–æ');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ email service:', error);
      throw error;
    }
  }

  static async sendEmail(options: EmailOptions): Promise<void> {
    if (!this.transporter) {
      await this.init();
    }

    if (!this.transporter) {
      throw new Error('Email transporter –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }

    const mailOptions = {
      from: `"${process.env.APP_NAME || '–ú–µ—Å—Å–µ–Ω–¥–∂–µ—Ä'}" <${process.env.SMTP_USER}>`,
      ...options,
    };

    try {
      const info = await this.transporter.sendMail(mailOptions);
      console.log('üìß Email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω:', info.messageId);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email:', error);
      throw error;
    }
  }

  static async sendWelcomeEmail(email: string, username: string): Promise<void> {
    const subject = '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä!';
    const html = this.getWelcomeEmailTemplate(username);

    await this.sendEmail({
      to: email,
      subject,
      html,
      text: `–ü—Ä–∏–≤–µ—Ç ${username}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä!`,
    });
  }

  static async sendPasswordResetEmail(email: string, tempPassword: string): Promise<void> {
    const subject = '–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è';
    const html = this.getPasswordResetEmailTemplate(tempPassword);

    await this.sendEmail({
      to: email,
      subject,
      html,
      text: `–í–∞—à –≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å: ${tempPassword}`,
    });
  }

  static async sendEmailVerification(email: string, verificationLink: string): Promise<void> {
    const subject = '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ email –∞–¥—Ä–µ—Å–∞';
    const html = this.getEmailVerificationTemplate(verificationLink);

    await this.sendEmail({
      to: email,
      subject,
      html,
      text: `–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è email: ${verificationLink}`,
    });
  }

  static async sendLoginNotification(email: string, userAgent: string, ip: string): Promise<void> {
    const subject = '–ù–æ–≤—ã–π –≤—Ö–æ–¥ –≤ –∞–∫–∫–∞—É–Ω—Ç';
    const html = this.getLoginNotificationTemplate(userAgent, ip);

    await this.sendEmail({
      to: email,
      subject,
      html,
      text: `–û–±–Ω–∞—Ä—É–∂–µ–Ω –Ω–æ–≤—ã–π –≤—Ö–æ–¥ –≤ –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç —Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞: ${userAgent}`,
    });
  }

  static async sendFriendRequestEmail(email: string, fromUsername: string): Promise<void> {
    const subject = '–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –≤ –¥—Ä—É–∑—å—è';
    const html = this.getFriendRequestEmailTemplate(fromUsername);

    await this.sendEmail({
      to: email,
      subject,
      html,
      text: `${fromUsername} –æ—Ç–ø—Ä–∞–≤–∏–ª –≤–∞–º –∑–∞—è–≤–∫—É –≤ –¥—Ä—É–∑—å—è!`,
    });
  }

  static async sendGroupInviteEmail(
    email: string, 
    groupName: string, 
    inviterUsername: string
  ): Promise<void> {
    const subject = '–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É';
    const html = this.getGroupInviteEmailTemplate(groupName, inviterUsername);

    await this.sendEmail({
      to: email,
      subject,
      html,
      text: `${inviterUsername} –ø—Ä–∏–≥–ª–∞—Å–∏–ª –≤–∞—Å –≤ –≥—Ä—É–ø–ø—É "${groupName}"`,
    });
  }

  // Email —à–∞–±–ª–æ–Ω—ã
  private static getWelcomeEmailTemplate(username: string): string {
    return `
      <!DOCTYPE html>
      <html>
        <head>
          <meta charset="utf-8">
          <title>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</title>
        </head>
        <body style="font-family: Arial, sans-serif; background-color: #f5f5f5; padding: 20px;">
          <div style="max-width: 600px; margin: 0 auto; background-color: white; padding: 30px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);">
            <div style="text-align: center; margin-bottom: 30px;">
              <h1 style="color: #4f46e5; margin: 0;">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</h1>
            </div>
            
            <div style="margin-bottom: 30px;">
              <p style="font-size: 16px; line-height: 1.6; color: #374151;">
                –ü—Ä–∏–≤–µ—Ç <strong>${username}</strong>! üëã
              </p>
              <p style="font-size: 16px; line-height: 1.6; color: #374151;">
                –°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤ –Ω–∞—à–µ–º –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–µ! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ:
              </p>
              
              <ul style="font-size: 16px; line-height: 1.6; color: #374151;">
                <li>üí¨ –û–±—â–∞—Ç—å—Å—è —Å –¥—Ä—É–∑—å—è–º–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏</li>
                <li>üìû –°–æ–≤–µ—Ä—à–∞—Ç—å –∞—É–¥–∏–æ –∏ –≤–∏–¥–µ–æ–∑–≤–æ–Ω–∫–∏</li>
                <li>üë• –°–æ–∑–¥–∞–≤–∞—Ç—å –≥—Ä—É–ø–ø–æ–≤—ã–µ —á–∞—Ç—ã</li>
                <li>üìÅ –û—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ñ–∞–π–ª—ã –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</li>
                <li>üñ•Ô∏è –î–µ–ª–∏—Ç—å—Å—è —ç–∫—Ä–∞–Ω–æ–º</li>
              </ul>
            </div>
            
            <div style="text-align: center; margin-top: 30px;">
              <p style="font-size: 14px; color: #9ca3af;">
                –° —É–≤–∞–∂–µ–Ω–∏–µ–º,<br>
                –ö–æ–º–∞–Ω–¥–∞ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–∞
              </p>
            </div>
          </div>
        </body>
      </html>
    `;
  }

  private static getPasswordResetEmailTemplate(tempPassword: string): string {
    return `
      <!DOCTYPE html>
      <html>
        <head>
          <meta charset="utf-8">
          <title>–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è</title>
        </head>
        <body style="font-family: Arial, sans-serif; background-color: #f5f5f5; padding: 20px;">
          <div style="max-width: 600px; margin: 0 auto; background-color: white; padding: 30px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);">
            <div style="text-align: center; margin-bottom: 30px;">
              <h1 style="color: #ef4444; margin: 0;">üîí –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è</h1>
            </div>
            
            <div style="margin-bottom: 30px;">
              <p style="font-size: 16px; line-height: 1.6; color: #374151;">
                –í–∞—à –≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å:
              </p>
              
              <div style="background-color: #f9fafb; border: 2px solid #e5e7eb; border-radius: 8px; padding: 20px; text-align: center; margin: 20px 0;">
                <span style="font-family: monospace; font-size: 24px; font-weight: bold; color: #ef4444; letter-spacing: 2px;">
                  ${tempPassword}
                </span>
              </div>
              
              <p style="font-size: 16px; line-height: 1.6; color: #374151;">
                ‚ö†Ô∏è <strong>–í–∞–∂–Ω–æ:</strong> –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–º–µ–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª—å –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞ –≤ –∞–∫–∫–∞—É–Ω—Ç!
              </p>
            </div>
            
            <div style="text-align: center; margin-top: 30px;">
              <p style="font-size: 14px; color: #9ca3af;">
                –ï—Å–ª–∏ –≤—ã –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è, –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —ç—Ç–æ –ø–∏—Å—å–º–æ.
              </p>
            </div>
          </div>
        </body>
      </html>
    `;
  }

  private static getEmailVerificationTemplate(verificationLink: string): string {
    return `
      <!DOCTYPE html>
      <html>
        <head>
          <meta charset="utf-8">
          <title>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ email</title>
        </head>
        <body style="font-family: Arial, sans-serif; background-color: #f5f5f5; padding: 20px;">
          <div style="max-width: 600px; margin: 0 auto; background-color: white; padding: 30px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);">
            <div style="text-align: center; margin-bottom: 30px;">
              <h1 style="color: #4f46e5; margin: 0;">‚úâÔ∏è –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ email</h1>
            </div>
            
            <div style="margin-bottom: 30px;">
              <p style="font-size: 16px; line-height: 1.6; color: #374151;">
                –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–∞—à email –∞–¥—Ä–µ—Å, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:
              </p>
              
              <div style="text-align: center; margin: 30px 0;">
                <a href="${verificationLink}" style="background-color: #4f46e5; color: white; padding: 15px 30px; text-decoration: none; border-radius: 8px; display: inline-block; font-weight: bold;">
                  –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å email
                </a>
              </div>
              
              <p style="font-size: 14px; color: #6b7280;">
                –ò–ª–∏ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –≤—Å—Ç–∞–≤—å—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä:<br>
                <span style="word-break: break-all;">${verificationLink}</span>
              </p>
            </div>
          </div>
        </body>
      </html>
    `;
  }

  private static getLoginNotificationTemplate(userAgent: string, ip: string): string {
    const now = new Date().toLocaleString('ru-RU');
    
    return `
      <!DOCTYPE html>
      <html>
        <head>
          <meta charset="utf-8">
          <title>–ù–æ–≤—ã–π –≤—Ö–æ–¥ –≤ –∞–∫–∫–∞—É–Ω—Ç</title>
        </head>
        <body style="font-family: Arial, sans-serif; background-color: #f5f5f5; padding: 20px;">
          <div style="max-width: 600px; margin: 0 auto; background-color: white; padding: 30px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);">
            <div style="text-align: center; margin-bottom: 30px;">
              <h1 style="color: #f59e0b; margin: 0;">üîê –ù–æ–≤—ã–π –≤—Ö–æ–¥ –≤ –∞–∫–∫–∞—É–Ω—Ç</h1>
            </div>
            
            <div style="margin-bottom: 30px;">
              <p style="font-size: 16px; line-height: 1.6; color: #374151;">
                –û–±–Ω–∞—Ä—É–∂–µ–Ω –Ω–æ–≤—ã–π –≤—Ö–æ–¥ –≤ –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç:
              </p>
              
              <div style="background-color: #f9fafb; border-left: 4px solid #f59e0b; padding: 20px; margin: 20px 0;">
                <p style="margin: 0; font-size: 14px; color: #374151;">
                  <strong>–í—Ä–µ–º—è:</strong> ${now}<br>
                  <strong>IP –∞–¥—Ä–µ—Å:</strong> ${ip}<br>
                  <strong>–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ:</strong> ${userAgent}
                </p>
              </div>
              
              <p style="font-size: 16px; line-height: 1.6; color: #374151;">
                –ï—Å–ª–∏ —ç—Ç–æ –±—ã–ª–∏ –Ω–µ –≤—ã, –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ —Å–º–µ–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª—å!
              </p>
            </div>
          </div>
        </body>
      </html>
    `;
  }

  private static getFriendRequestEmailTemplate(fromUsername: string): string {
    return `
      <!DOCTYPE html>
      <html>
        <head>
          <meta charset="utf-8">
          <title>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –≤ –¥—Ä—É–∑—å—è</title>
        </head>
        <body style="font-family: Arial, sans-serif; background-color: #f5f5f5; padding: 20px;">
          <div style="max-width: 600px; margin: 0 auto; background-color: white; padding: 30px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);">
            <div style="text-align: center; margin-bottom: 30px;">
              <h1 style="color: #10b981; margin: 0;">üë• –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –≤ –¥—Ä—É–∑—å—è</h1>
            </div>
            
            <div style="margin-bottom: 30px;">
              <p style="font-size: 16px; line-height: 1.6; color: #374151;">
                <strong>${fromUsername}</strong> –æ—Ç–ø—Ä–∞–≤–∏–ª –≤–∞–º –∑–∞—è–≤–∫—É –≤ –¥—Ä—É–∑—å—è! üéâ
              </p>
              
              <p style="font-size: 16px; line-height: 1.6; color: #374151;">
                –í–æ–π–¥–∏—Ç–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, —á—Ç–æ–±—ã –ø—Ä–∏–Ω—è—Ç—å –∏–ª–∏ –æ—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É.
              </p>
            </div>
          </div>
        </body>
      </html>
    `;
  }

  private static getGroupInviteEmailTemplate(groupName: string, inviterUsername: string): string {
    return `
      <!DOCTYPE html>
      <html>
        <head>
          <meta charset="utf-8">
          <title>–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É</title>
        </head>
        <body style="font-family: Arial, sans-serif; background-color: #f5f5f5; padding: 20px;">
          <div style="max-width: 600px; margin: 0 auto; background-color: white; padding: 30px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);">
            <div style="text-align: center; margin-bottom: 30px;">
              <h1 style="color: #8b5cf6; margin: 0;">üéä –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É</h1>
            </div>
            
            <div style="margin-bottom: 30px;">
              <p style="font-size: 16px; line-height: 1.6; color: #374151;">
                <strong>${inviterUsername}</strong> –ø—Ä–∏–≥–ª–∞—Å–∏–ª –≤–∞—Å –≤ –≥—Ä—É–ø–ø—É 
                "<strong>${groupName}</strong>"! 
              </p>
              
              <p style="font-size: 16px; line-height: 1.6; color: #374151;">
                –í–æ–π–¥–∏—Ç–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, —á—Ç–æ–±—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –æ–±—Å—É–∂–¥–µ–Ω–∏—é.
              </p>
            </div>
          </div>
        </body>
      </html>
    `;
  }
}